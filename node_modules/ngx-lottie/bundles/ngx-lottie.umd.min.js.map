{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-lottie/src/symbols.ts","ng://ngx-lottie/src/utils.ts","ng://ngx-lottie/src/animation-loader.ts","ng://ngx-lottie/src/base.directive.ts","ng://ngx-lottie/src/animation-cache.ts","ng://ngx-lottie/src/events-facade.ts","ng://ngx-lottie/src/lottie.directive.ts","ng://ngx-lottie/src/lottie.component.ts","ng://ngx-lottie/src/lottie.module.ts","ng://ngx-lottie/src/transfer-state.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","LOTTIE_OPTIONS","InjectionToken","ANIMATION_CACHE","transformAnimationFilenameToKey","animation","split","AnimationLoader","ngZone","platformId","options","animationCache","player","playerOrLoader","player$","Promise","from","pipe","map","module","default","catchError","console","throwError","shareReplay","of","resolveLoaderAndLoadAnimation","container","eventsFacade","animationCreated","instance","destroy$","_this","isPlatformServer","takeUntil","subscribe","mergedOptions","merged","assign","renderer","loop","autoplay","transformOptions","mergeOptionsWithDefault","loadAnimation","animationItem","runOutsideAngular","addEventListener","set","awaitConfigAndCache","emit","addEventListeners","Injectable","NgZone","Inject","args","PLATFORM_ID","BaseDirective","animationLoader","containerClass","styles","width","height","EventEmitter","complete","loopComplete","enterFrame","segmentStart","configReady","dataReady","domLoaded","destroy","Subject","ngOnDestroy","setWidthAndHeight","Directive","selector","Input","Output","AnimationCache","cache","Map","useCache","path","has","animationData","get","isAnimationConfigWithData","LottieEventsFacade","eventsMap","dispose","addEventListenersToObservedEventEmitters","observedEmitters","keys","key","filter","_a","_b","property","observers","eventEmitter","name","getObservedEventEmitters","name_1","this_1","event","observedEmitters_1","observedEmitters_1_1","LottieDirective","host","_super","ngOnInit","nativeElement","providers","ElementRef","decorators","type","Self","LottieComponent","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ViewChild","static","LottieModule","forRoot","ngModule","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","declarations","exports","LottieTransferState","transferState","animationKey","stateKey","makeStateKey","providedIn","TransferState"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nimport { AnimationCache } from './animation-cache';\n\nexport interface BMEnterFrameEvent {\n  currentTime: number;\n  duration: number;\n  totalTime: number;\n  type: 'enterFrame';\n}\n\nexport interface BMCompleteLoopEvent {\n  type: 'loopComplete';\n  loop: number;\n  playCount: number;\n  frameMult: number;\n}\n\nexport interface BMCompleteEvent {\n  type: 'complete';\n  duration: number;\n}\n\nexport interface BMSegmentStartEvent {\n  type: 'segmentStart';\n  firstFrame: number;\n  totalFrames: number;\n}\n\nexport interface BMDestroyEvent {\n  target: AnimationItem;\n  type: 'destroy';\n}\n\nexport interface BMRenderFrameErrorEvent {\n  type: 'renderFrameError';\n  nativeError: Error;\n  currentTime: number;\n}\n\nexport interface BMConfigErrorEvent {\n  type: 'configError';\n  nativeError: Error;\n}\n\nexport type LottieEvent =\n  | BMEnterFrameEvent\n  | BMCompleteLoopEvent\n  | BMCompleteEvent\n  | BMSegmentStartEvent\n  | BMDestroyEvent\n  | BMRenderFrameErrorEvent\n  | BMConfigErrorEvent\n  | void;\n\nexport type CamelizedAnimationEventName =\n  | 'complete'\n  | 'loopComplete'\n  | 'enterFrame'\n  | 'segmentStart'\n  | 'configReady'\n  | 'dataReady'\n  | 'domLoaded'\n  | 'destroy'\n  | 'error';\n\nexport type EventsMap = { [key in CamelizedAnimationEventName]: AnimationEventName };\n\nexport type AnimationFilename = string;\nexport type AnimationEventName = import('lottie-web').AnimationEventName;\nexport type AnimationItem = import('lottie-web').AnimationItem;\nexport type LottiePlayer = typeof import('lottie-web').default;\n\n/**\n * This looks as follows\n * @example\n * import player from 'lottie-web';\n * const factory = () => player;\n */\ntype LottiePlayerFactory = () => typeof import('lottie-web').default;\n\n/**\n * This looks as follows\n * @example\n * const factory = () => import('lottie-web');\n */\ntype LottieLoader = () => Promise<typeof import('lottie-web')>;\n\nexport type LottiePlayerFactoryOrLoader = LottiePlayerFactory | LottieLoader;\n\nexport interface LottieOptions {\n  player: LottiePlayerFactoryOrLoader;\n  useCache?: boolean;\n}\n\nexport type AnimationConfigWithData = import('lottie-web').AnimationConfigWithData;\nexport type AnimationConfigWithPath = import('lottie-web').AnimationConfigWithPath;\nexport type AnimationOptions = Partial<AnimationConfigWithData> | Partial<AnimationConfigWithPath>;\n\nexport const LOTTIE_OPTIONS = new InjectionToken<LottieOptions>('LottieOptions');\nexport const ANIMATION_CACHE = new InjectionToken<AnimationCache | null>('AnimationCache');\n","import { from, throwError, of, Observable } from 'rxjs';\nimport { map, catchError, shareReplay } from 'rxjs/operators';\n\nimport {\n  LottiePlayer,\n  AnimationOptions,\n  AnimationFilename,\n  AnimationConfigWithData,\n  AnimationConfigWithPath,\n  AnimationItem,\n  LottiePlayerFactoryOrLoader,\n} from './symbols';\nimport { AnimationCache } from './animation-cache';\n\nexport function transformAnimationFilenameToKey(animation: AnimationFilename): string {\n  return `animation-${animation.split('.json')[0]}`;\n}\n\nexport function mergeOptionsWithDefault(\n  options: AnimationOptions | null,\n  container: HTMLElement,\n  animationCache: AnimationCache | null,\n): AnimationConfigWithData | AnimationConfigWithPath {\n  const merged: AnimationConfigWithData | AnimationConfigWithPath = Object.assign(\n    {\n      container,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n    },\n    options,\n  );\n\n  if (animationCache !== null) {\n    return animationCache.transformOptions(merged);\n  }\n\n  return merged;\n}\n\nexport function isAnimationConfigWithData(\n  options: AnimationConfigWithPath | AnimationConfigWithData,\n): options is AnimationConfigWithData {\n  const animationData = (options as AnimationConfigWithData).animationData;\n  return animationData !== null && typeof animationData === 'object';\n}\n\nexport function awaitConfigAndCache(\n  animationCache: AnimationCache | null,\n  options: AnimationConfigWithPath | AnimationConfigWithData,\n  animationItem: AnimationItem,\n): void {\n  if (animationCache === null) {\n    return;\n  }\n\n  animationItem.addEventListener('config_ready', () => {\n    animationCache.set(options, animationItem);\n  });\n}\n\nexport function streamifyPlayerOrLoader(\n  player: LottiePlayerFactoryOrLoader,\n): Observable<LottiePlayer> {\n  const playerOrLoader = player();\n\n  if (playerOrLoader instanceof Promise) {\n    return from(playerOrLoader).pipe(\n      map(module => module.default || module),\n      catchError(error => {\n        console.error(`\n          Could not retrieve the \"lottie-web\" player, did you provide\n          the \"player\" property correctly?\n          export function playerFactory() {\n            return import('lottie-web');\n          }\n          LottieModule.forRoot({ player: playerFactory })\n        `);\n        return throwError(error);\n      }),\n      shareReplay(1),\n    );\n  }\n\n  return of(playerOrLoader);\n}\n","import { Injectable, NgZone, Inject, EventEmitter, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  LottiePlayer,\n  LottieOptions,\n  AnimationItem,\n  AnimationOptions,\n  AnimationConfigWithData,\n  AnimationConfigWithPath,\n  LOTTIE_OPTIONS,\n  ANIMATION_CACHE,\n} from './symbols';\nimport { awaitConfigAndCache, mergeOptionsWithDefault, streamifyPlayerOrLoader } from './utils';\nimport { BaseDirective } from './base.directive';\nimport { AnimationCache } from './animation-cache';\nimport { LottieEventsFacade } from './events-facade';\n\n@Injectable()\nexport class AnimationLoader {\n  private player$ = streamifyPlayerOrLoader(this.options.player);\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(LOTTIE_OPTIONS) private options: LottieOptions,\n    @Inject(ANIMATION_CACHE) private animationCache: AnimationCache | null,\n  ) {}\n\n  resolveLoaderAndLoadAnimation(\n    options: AnimationOptions | null,\n    container: HTMLElement,\n    eventsFacade: LottieEventsFacade,\n    animationCreated: EventEmitter<AnimationItem>,\n    instance: BaseDirective,\n    destroy$: Subject<void>,\n  ) {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.player$.pipe(takeUntil(destroy$)).subscribe(player => {\n      const mergedOptions = mergeOptionsWithDefault(options, container, this.animationCache);\n      this.loadAnimation(player, mergedOptions, eventsFacade, animationCreated, instance);\n    });\n  }\n\n  private loadAnimation(\n    player: LottiePlayer,\n    options: AnimationConfigWithData | AnimationConfigWithPath,\n    eventsFacade: LottieEventsFacade,\n    animationCreated: EventEmitter<AnimationItem>,\n    instance: BaseDirective,\n  ): void {\n    const animationItem = this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n    awaitConfigAndCache(this.animationCache, options, animationItem);\n    // Dispatch `animationCreated` event after animation is loaded successfully\n    animationCreated.emit(animationItem);\n    eventsFacade.addEventListeners(instance, animationItem);\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  OnDestroy\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Subject } from 'rxjs';\n\nimport {\n  AnimationOptions,\n  BMCompleteEvent,\n  BMCompleteLoopEvent,\n  BMEnterFrameEvent,\n  BMSegmentStartEvent,\n  BMDestroyEvent,\n  BMRenderFrameErrorEvent,\n  BMConfigErrorEvent,\n  AnimationItem\n} from './symbols';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Directive({ selector: '[lottie]' })\nexport class BaseDirective implements OnDestroy {\n  @Input() options: AnimationOptions | null = null;\n\n  @Input() containerClass: string | null = null;\n\n  @Input() styles: Partial<CSSStyleDeclaration> | null = null;\n\n  @Input() width: string | null = null;\n\n  @Input() height: string | null = null;\n\n  /**\n   * `animationCreated` is dispatched after calling `loadAnimation`\n   */\n  @Output() animationCreated = new EventEmitter<AnimationItem>();\n\n  /**\n   * `complete` is dispatched after completing the last frame\n   */\n  @Output() complete = new EventEmitter<BMCompleteEvent>();\n\n  /**\n   * `loopComplete` is dispatched after completing frame loop\n   */\n  @Output() loopComplete = new EventEmitter<BMCompleteLoopEvent>();\n\n  /**\n   * `enterFrame` is dispatched after entering the new frame\n   */\n  @Output() enterFrame = new EventEmitter<BMEnterFrameEvent>();\n\n  /**\n   * `segmentStart` is dispatched when the new segment is adjusted\n   */\n  @Output() segmentStart = new EventEmitter<BMSegmentStartEvent>();\n\n  /**\n   * Original event name is `config_ready`. `config_ready` is dispatched\n   * after the needed renderer is configured\n   */\n  @Output() configReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `data_ready`. `data_ready` is dispatched\n   * when all parts of the animation have been loaded\n   */\n  @Output() dataReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n   * when elements have been added to the DOM\n   */\n  @Output() domLoaded = new EventEmitter<void>();\n\n  /**\n   * `destroy` will be dispatched in the `ngOnDestroy` hook of the service,\n   * it's useful for releasing resources\n   */\n  @Output() destroy = new EventEmitter<BMDestroyEvent>();\n\n  /**\n   * `error` will be dispatched if the lottie player could not render\n   * some frame or parse config\n   */\n  @Output() error = new EventEmitter<BMRenderFrameErrorEvent | BMConfigErrorEvent>();\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string,\n    private animationLoader: AnimationLoader\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected setWidthAndHeight(): void {\n    this.width = this.width || '100%';\n    this.height = this.height || '100%';\n  }\n\n  protected loadAnimation(\n    container: HTMLElement | HTMLCanvasElement,\n    eventsFacade: LottieEventsFacade,\n    instance: BaseDirective\n  ): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.animationLoader.resolveLoaderAndLoadAnimation(\n      this.options,\n      container,\n      eventsFacade,\n      this.animationCreated,\n      instance,\n      this.destroy$\n    );\n  }\n}\n","import {\n  LottieOptions,\n  AnimationItem,\n  AnimationConfigWithData,\n  AnimationConfigWithPath\n} from './symbols';\nimport { isAnimationConfigWithData } from './utils';\n\nexport class AnimationCache {\n  private cache = new Map<string, unknown>();\n\n  static create(options: LottieOptions): AnimationCache | null {\n    if (options.useCache) {\n      return new AnimationCache();\n    }\n\n    return null;\n  }\n\n  transformOptions(\n    options: AnimationConfigWithData | AnimationConfigWithPath\n  ): AnimationConfigWithData | AnimationConfigWithPath {\n    const path = (options as AnimationConfigWithPath).path;\n    if (path && this.cache.has(path)) {\n      delete (options as AnimationConfigWithPath).path;\n      (options as AnimationConfigWithData).animationData = this.cache.get(path);\n    }\n    return options;\n  }\n\n  set(\n    options: AnimationConfigWithData | AnimationConfigWithPath,\n    animationItem: AnimationItem\n  ): void {\n    if (isAnimationConfigWithData(options)) {\n      return;\n    }\n\n    const animationData = animationItem['animationData'];\n    this.cache.set(options.path!, animationData);\n  }\n}\n","import { OnDestroy, Injectable, NgZone, Inject, EventEmitter, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { BaseDirective } from './base.directive';\nimport { EventsMap, LottieEvent, AnimationItem } from './symbols';\n\n/**\n * Returns only those `EventEmitter` instances that has attached observers\n */\nfunction getObservedEventEmitters(instance: BaseDirective, eventsMap: EventsMap) {\n  return (\n    Object.keys(instance)\n      // `Object.entries` is not supported in IE11.\n      .map(key => [key, instance[key]])\n      .filter(\n        ([key, property]) =>\n          property instanceof EventEmitter &&\n          property.observers.length > 0 &&\n          eventsMap.hasOwnProperty(key)\n      )\n      .map(([key, eventEmitter]) => ({\n        eventEmitter,\n        name: eventsMap[key]\n      }))\n  );\n}\n\n@Injectable()\nexport class LottieEventsFacade implements OnDestroy {\n  /**\n   * @see https://github.com/airbnb/lottie-web#events\n   */\n  private eventsMap: EventsMap = {\n    complete: 'complete',\n    loopComplete: 'loopComplete',\n    enterFrame: 'enterFrame',\n    segmentStart: 'segmentStart',\n    configReady: 'config_ready',\n    dataReady: 'data_ready',\n    domLoaded: 'DOMLoaded',\n    destroy: 'destroy',\n    error: 'error'\n  };\n\n  private animationItem: AnimationItem | null = null;\n\n  constructor(private ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnDestroy(): void {\n    this.dispose();\n  }\n\n  addEventListeners(instance: BaseDirective, animationItem: AnimationItem): void {\n    this.animationItem = animationItem;\n    // `AnimationItem` triggers different events every ms, we have to listen\n    // them outside Angular's context, thus it won't affect performance\n    this.ngZone.runOutsideAngular(() => this.addEventListenersToObservedEventEmitters(instance));\n  }\n\n  private dispose(): void {\n    // The `ng-lottie` component or the `lottie` directive can be destroyed\n    // before the `animationItem` is set, thus it will fail with\n    // `Cannot read property 'destroy' of null`.\n    // Potentially it can happen if the directive gets destroyed before change\n    // detection is run.\n    if (isPlatformServer(this.platformId) || this.animationItem === null) {\n      return;\n    }\n\n    // `destroy()` will remove all events listeners\n    this.animationItem.destroy();\n    this.animationItem = null;\n  }\n\n  private addEventListenersToObservedEventEmitters(instance: BaseDirective): void {\n    const observedEmitters = getObservedEventEmitters(instance, this.eventsMap);\n\n    for (const { name, eventEmitter } of observedEmitters) {\n      this.animationItem!.addEventListener(name, (event: LottieEvent) => {\n        eventEmitter.emit(event);\n      });\n    }\n  }\n}\n","import { Directive, OnInit, Inject, Self, ElementRef, PLATFORM_ID } from '@angular/core';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Directive({\n  selector: '[lottie]',\n  providers: [LottieEventsFacade]\n})\nexport class LottieDirective extends BaseDirective implements OnInit {\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string,\n    @Self() private host: ElementRef<HTMLElement>,\n    @Self() private eventsFacade: LottieEventsFacade,\n    animationLoader: AnimationLoader\n  ) {\n    super(platformId, animationLoader);\n  }\n\n  ngOnInit(): void {\n    super.loadAnimation(this.host.nativeElement, this.eventsFacade, this);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  Inject,\n  ElementRef,\n  ViewChild,\n  Self,\n  PLATFORM_ID\n} from '@angular/core';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Component({\n  selector: 'ng-lottie',\n  template: `\n    <div\n      #container\n      [style.width]=\"width\"\n      [style.height]=\"height\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [LottieEventsFacade]\n})\nexport class LottieComponent extends BaseDirective implements OnInit {\n  @ViewChild('container', { static: true }) container: ElementRef<HTMLElement> = null!;\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string,\n    @Self() private eventsFacade: LottieEventsFacade,\n    animationLoader: AnimationLoader\n  ) {\n    super(platformId, animationLoader);\n  }\n\n  ngOnInit(): void {\n    super.setWidthAndHeight();\n    super.loadAnimation(this.container.nativeElement, this.eventsFacade, this);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationCache } from './animation-cache';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieDirective } from './lottie.directive';\nimport { LottieComponent } from './lottie.component';\nimport { LottieOptions, LOTTIE_OPTIONS, ANIMATION_CACHE } from './symbols';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BaseDirective, LottieDirective, LottieComponent],\n  exports: [BaseDirective, LottieDirective, LottieComponent],\n})\nexport class LottieModule {\n  static forRoot(options: LottieOptions): ModuleWithProviders<LottieModule> {\n    return {\n      ngModule: LottieModule,\n      providers: [\n        AnimationLoader,\n        {\n          provide: LOTTIE_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: ANIMATION_CACHE,\n          useFactory: AnimationCache.create,\n          deps: [LOTTIE_OPTIONS],\n        },\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nimport { AnimationFilename } from './symbols';\nimport { transformAnimationFilenameToKey } from './utils';\n\n@Injectable({ providedIn: 'root' })\nexport class LottieTransferState {\n  constructor(private transferState: TransferState) {}\n\n  get<T>(animation: AnimationFilename): T | null {\n    const animationKey = transformAnimationFilenameToKey(animation);\n    const stateKey = makeStateKey<T>(animationKey);\n    return this.transferState.get(stateKey, null);\n  }\n}\n"]}